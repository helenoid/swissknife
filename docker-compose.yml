version: '3.8'

services:
  swissknife:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - SWISSKNIFE_MODE=web
      - SWISSKNIFE_HOST=0.0.0.0
      - SWISSKNIFE_PORT=3001
    volumes:
      - swissknife-data:/app/data
      - swissknife-config:/app/config
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.swissknife.rule=Host(`swissknife.local`)"
      - "traefik.http.services.swissknife.loadbalancer.server.port=3001"

  # Optional: Add IPFS node for full functionality
  ipfs:
    image: ipfs/go-ipfs:latest
    ports:
      - "4001:4001"   # P2P port
      - "5001:5001"   # API port
      - "8080:8080"   # Gateway port
    volumes:
      - ipfs-data:/data/ipfs
    environment:
      - IPFS_PROFILE=server
    restart: unless-stopped

  # Optional: Add reverse proxy for production
  traefik:
    image: traefik:v2.9
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    restart: unless-stopped

volumes:
  swissknife-data:
    driver: local
  swissknife-config:
    driver: local
  ipfs-data:
    driver: local

networks:
  default:
    name: swissknife-network